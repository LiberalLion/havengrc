0.0.0.0:80

# terminating TLS at gatekeeper for now
# tls /certs/fullchain.pem /certs/privkey.pem

# https redirect is handled at kubernetes route object (load balancer)
# redir 301 {
#   if {>X-Forwarded-Proto} is http
#   / https://{host}{uri}
# }

header / {
  # Enable HTTP Strict Transport Security (HSTS) to force clients to always
  # connect via HTTPS (do not use if only testing)
  Strict-Transport-Security "max-age=31536000; includeSubDomains"
  # Enable cross-site filter (XSS) and tell browser to block detected attacks
  X-XSS-Protection "1; mode=block"
  # Prevent some browsers from MIME-sniffing a response away from the declared Content-Type
  X-Content-Type-Options "nosniff"
  # Disallow the site to be rendered within a frame (clickjacking protection)
  X-Frame-Options "sameorigin"
  # CSP
  Content-Security-Policy "default-src 'self' *.iubenda.com; script-src 'self' *.iubenda.com www.google-analytics.com 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: www.gravatar.com *.iubenda.com www.google-analytics.com; style-src 'self' 'unsafe-inline' *.iubenda.com;  frame-src: *.iubenda.com *.consensu.org; font-src 'self' data: ;"
  Feature-Policy "autoplay 'none'; camera 'none'; microphone 'none'; midi 'none'; usb 'none'; vr 'none';"
  Referrer-Policy "strict-origin"
}

proxy /auth keycloak:8080 {
  transparent
  header_upstream X-Forwarded-Proto {>X-Forwarded-Proto}
  # see https://github.com/mholt/caddy/issues/2550#issuecomment-480314316 for
  # how caddy needs this help to forward proto correctly when behind another
  # proxy (gatekeeper)
}

proxy /api api:3001 {
  without /api
  transparent
  header_upstream X-Forwarded-Proto {>X-Forwarded-Proto}
}

proxy /rpc api:3001 {
  transparent
  header_upstream X-Forwarded-Proto {>X-Forwarded-Proto}
}

proxy /api/onboarding havenapi:3000 {
  transparent
  header_upstream X-Forwarded-Proto {>X-Forwarded-Proto}
}

proxy /api/reports havenapi:3000 {
  transparent
  header_upstream X-Forwarded-Proto {>X-Forwarded-Proto}
}

proxy /api/registration_funnel havenapi:3000 {
  transparent
  header_upstream X-Forwarded-Proto {>X-Forwarded-Proto}
}

proxy /api/surveys havenapi:3000 {
  transparent
  header_upstream X-Forwarded-Proto {>X-Forwarded-Proto}
}
# this rewrite makes it so anything we are not proxying to api or auth
# is rewritten to index.html, so that the SPA is served. This is necessary
# to support path-based-routing in a single page application in cases where
# the page is reloaded with a path, so that the browser gets the app sent
# and then the app can interpret the path and render the correct page
rewrite {
  if {path} not_starts_with /api
  if {path} not_starts_with /auth
  to {path} {path}/ /
}

log / stdout "{combined}"

errors stdout
