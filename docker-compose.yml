---
version: '2'

volumes:
  database: {}
  prometheus_data: {}
  grafana_data: {}

services:
  start_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - db
    command: db:5432
  start_keycloak:
    image: dadarek/wait-for-dependencies
    depends_on:
      - keycloak
    command: keycloak:8080
  faktory:
    build:
      context: ./faktory
    ports:
      - "7420:7420"
    environment:
      - FAKTORY_PASSWORD=fassword
    volumes:
      - ./faktory-data:/var/lib/faktory
    command: /faktory -b 0.0.0.0:7419 -w 0.0.0.0:7420 -e production
  keycloak:
    depends_on:
      - start_dependencies
    build:
      context: .
      dockerfile: ./keycloak/Dockerfile
    # to use the image line, you must first build & load the image
    # bazel run //keycloak:keycloak
    # image: bazel/keycloak:keycloak
    # TODO: trouble with neverlink, need to figure out how to neverlink antlr and dom4j
    environment:
      - DB_DATABASE=mappamundi_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_ADDR=postgres
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_LOGLEVEL=info
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_HOSTNAME=dev.havengrc.com
      - KEYCLOAK_HTTP_PORT=80
      - KEYCLOAK_HTTPS_PORT=443
    links:
      - db:postgres
    volumes:
      - ./keycloak/themes/haven:/opt/jboss/keycloak/themes/haven
      - ./keycloak/data:/keycloak
    command: ["-b", "0.0.0.0", "-Dkeycloak.migration.file=/keycloak/havendev-realm.json", "-Dkeycloak.migration.strategy=IGNORE_EXISTING", "-Dkeycloak.migration.provider=singleFile", "-Dkeycloak.migration.action=import"]
  flyway:
    build:
      context: flyway/
    volumes:
      - ./flyway/sql:/flyway/sql
    environment:
      - FLYWAY_URL=jdbc:postgresql://db/mappamundi_dev
      - FLYWAY_USER=postgres
      - FLYWAY_PASSWORD=postgres
      - FLYWAY_IGNORE_MISSING_MIGRATIONS=true
      - FLYWAY_GROUP=true
      - FLYWAY_SCHEMAS=mappa,1
      - FLYWAY_PLACEHOLDERS_DATABASEUSER=postgres
    command: ["migrate", "-placeholders.databaseUser=postgres"]
    links:
      - db
  api:
    build:
      dockerfile: ./postgrest/Dockerfile
      context: .
    command: [postgrest, "/config"]
    environment:
      - DATABASE_NAME=mappamundi_dev
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - HAVEN_JWK_PATH=/keycloak-dev-public-key.json
      - PGRST_JWT_AUD_CLAIM=havendev
      - PGRST_SERVER_PROXY_URI=http://localhost:8180
    volumes:
      - ./postgrest/keycloak-dev-public-key.json:/keycloak-dev-public-key.json
    ports:
      - "3001:8180"
    links:
      - db
    depends_on:
      - flyway
  db:
    image: postgres:9.6.4
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=mappamundi_dev
    volumes:
      - ./postgresql-data:/var/lib/postgresql
  gatekeeper:
    build:
      context: gatekeeper/
    ports:
      - "80:81"
    volumes:
      - ./gatekeeper/config:/opt/config
      - ./webui/pki:/certs
    links:
      - webui
    # k8s equivalent to extra_hosts is .spec.hostAliases
    extra_hosts:
      - "dev.havengrc.com:127.0.0.1"
    environment:
      - TLS_CERT=
      - TLS_PRIVATE_KEY=
      - CLIENT_SECRET=df2ba720-1d10-4d85-940a-6df77ef69baa
      - UPSTREAM_URL=http://webui/
      - DISCOVERY_URL=http://dev.havengrc.com/auth/realms/havendev
      - KEYCLOAK_INTERNAL=http://keycloak:8080
      - KEYCLOAK_SCHEME=http
      - BASE_URI=
      - REDIRECTION_URL=http://dev.havengrc.com/
      - GATEKEEPER_SESSION_KEY=c01f3736e640ea874d66c3704ddb7a9a
      - GATEKEEPER_LISTEN_PORT=81
      - SECURE_COOKIE=false
  worker:
    environment:
      - FAKTORY_URL=tcp://:fassword@faktory:7419
      - KC_ADMIN=admin
      - KC_PW=admin
      - KC_HOST=http://dev.havengrc.com
      - KC_PORT=
    build:
      dockerfile: ./worker/Dockerfile
      context: .
    links:
      - faktory
      - gatekeeper:dev.havengrc.com
    volumes:
      - ./worker/compilereport:/home/havenuser/compilereport
      - ./worker/presentation.Rmd:/home/havenuser/presentation.Rmd
      - ./worker/template.pptx:/home/havenuser/template.pptx
      - ./worker/input.csv:/home/havenuser/input.csv
      - ./worker/output:/home/havenuser/output
      - ./worker/docker-compose.yml:/home/havenuser/docker-compose.yml
      - ./worker/culture-as-mental-model.png:/home/havenuser/culture-as-mental-model.png
  havenapi:
    working_dir: /go/src/github.com/kindlyops/havengrc/havenapi
    volumes:
      - ./havenapi:/go/src/github.com/kindlyops/havengrc/havenapi
      - /go/src/github.com/kindlyops/havengrc/havenapi/vendor
      - ./postgrest/keycloak-dev-public-key.json:/keycloak-dev-public-key.json
    environment:
      - HAVEN_JWK_PATH=/keycloak-dev-public-key.json
      - HAVEN_JWT_ISS=http://dev.havengrc.com/auth/realms/havendev
      - KC_ADMIN=admin
      - KC_PW=admin
      - KC_HOST=http://keycloak
      - KC_PORT=8080
      - FAKTORY_URL=tcp://:fassword@faktory:7419
    build:
      context: .
      dockerfile: ./havenapi/Dockerfile-hotreload
    links:
      - db
      - faktory
      - keycloak
    ports:
      - "3000:3000"
  webui:
    working_dir: /code
    volumes:
      - ./webui:/code
      - /code/node_modules
      - /code/elm-stuff
    build:
      context: .
      dockerfile: ./webui/Dockerfile-hotreload
    depends_on:
      - api
      - havenapi
      - keycloak
    ports:
      - "2015:80"
    command: [/code/installrun.sh]
    environment:
      - ELM_APP_KEYCLOAK_CLIENT_ID=havendev
      - VIRTUAL_HOST=dev.havengrc.com

